#!/bin/csh -f
#TEST-PROGRAM sander
#TEST-DESCRIP TO_BE_DEtermined
#TEST-PURPOSE regression, basic
#TEST-STATE   undocumented

if( ! $?TESTsander ) set TESTsander = "${AMBERHOME}/bin/sander"

if( ! $?DO_PARALLEL ) then
         setenv DO_PARALLEL " "
endif

cat > lmod.in <<EOF
 input for sander for trpcage lmod docking
 &cntrl
   cut    = 999.0,     
   ntx    = 1,     
   irest  = 0,  
   ipol   = 0,
   ntb    = 0,       
   igb    = 6,
   imin   = 1,  
   maxcyc = 5000, 
   ntmin  = 4,  
   drms   = 0.2,
   ntpr   = 1,
 /
 &lmod
   conflib_size = 20,
   number_lmod_iterations = 1,
   total_low_modes = 10,
   explored_low_modes = 3,

   number_free_rotrans_modes =  6,
   energy_window = 50.0,
   lmod_minimize_grms = 0.1,

   arnoldi_dimension = 0,
   matrix_vector_product_method = 'forward',
   frequency_eigenvector_recalc = 6,

   lmod_restart_frequency = 6,
   restart_pool_size = 3,

   number_lmod_moves = 0,
   lmod_step_size_max = 5.0,
   lmod_step_size_min = 2.0,
   lmod_relax_grms    = 1.0,

   Monte_Carlo_method = 'Metropolis',
   rtemperature = 1.5,

   number_ligands = 0,

   conflib_filename = 'trpcage_lmod_conflib',
   lmod_trajectory_filename = 'trpcage_lmod_trajectory',
   lmod_job_title = 'trpcage lmod test job',

   lmod_verbosity = 2,

   random_seed = 314159,

   lbfgs_memory_depth = 3,
   xmin_method = 'LBFGS',
   xmin_verbosity = 0
 /
EOF

set output = sander_trpcage_lmod
set lmodoutput = trpcage_lmod.out

touch dummy
$DO_PARALLEL $TESTsander -O -i lmod.in -o $output < dummy >& $lmodoutput \
    || goto error

../dacdif $lmodoutput.save $lmodoutput
/bin/rm -f dummy lmod.in $output trpcage_lmod_trajectory trpcage_lmod_conflib \
           conflib.dat restrt mdinfo
exit(0)

error:
echo "  ${0}:  Program error"
exit(1)










