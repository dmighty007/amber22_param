#!/bin/csh -f
#TEST-PROGRAM sander
#TEST-DESCRIP TO_BE_DEtermined
#TEST-PURPOSE regression, basic
#TEST-STATE   undocumented

set sander = "${AMBERHOME}/bin/sander.MPI"
if( $?TESTsander ) then
   set sander = $TESTsander
endif

if( ! $?DO_PARALLEL ) then
  echo " NEB can only be run in parallel. "
  echo " This test case requires a minimum of 4 mpi threads to run."
  echo " set env var DO_PARALLEL"
  echo " Not running test, exiting....."
  exit(0)
else
  set numprocs=`echo $DO_PARALLEL | awk -f ../../numprocs.awk `
  if ( "$numprocs" == 4 || "$numprocs" == 8 || "$numprocs" == 12 ) then
      goto runtest
  else if ( $?MP_PROCS)then
      if ( $MP_PROCS == 4 || $MP_PROCS == 8 || $MP_PROCS == 12 )then
        goto runtest
      endif
  endif
endif

echo " This test case requires a least 4 mpi threads."
echo " The number of mpi threads must also be a multiple of 4 and not more than 12."
echo " Not running test, exiting....."
exit(0)

runtest:
cat > mdin <<EOF
Alanine NEB initial MD with small K
 &cntrl
  imin = 0, irest = 0,
  ntc=1, ntf=1,
  ntpr=1, ntwx=500,
  ntb = 0, cut = 999.0, rgbmax=999.0,
  igb = 1, saltcon=0.2,
  nstlim = 25, nscm=0,
  dt = 0.0005, ig=42,
  ntt = 3, gamma_ln=1000.0,
  tempi=0.0, temp0=300.0,
  tgtfitmask=":1,2,3",
  tgtrmsmask=":1,2,3@N,CA,C",
  ineb = 1,skmin = 10,skmax = 10,
  nmropt=1,
 /
 &wt type='TEMP0', istep1=0,istep2=35000,
   value1=0.0, value2=300.0
 /
 &wt type='END'
 /
EOF

$DO_PARALLEL $sander -ng 4 -groupfile groupfile.in || goto error
../../dacdif -a 1.e-3 neb_gb_partial_01.out.save neb_gb_partial_01.out
../../dacdif -a 1.e-3 neb_gb_partial_02.out.save neb_gb_partial_02.out
../../dacdif -a 1.e-3 neb_gb_partial_03.out.save neb_gb_partial_03.out
../../dacdif -a 1.e-3 neb_gb_partial_04.out.save neb_gb_partial_04.out

/bin/rm -f mdin *.inf *.mdcrd *.rst *.out 
endif

exit(0)

error:
echo "  ${0}:  Program error"
exit(1)
