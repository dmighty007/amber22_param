#!/bin/csh -f

#################################################
### WHAT DO YOU WANT TO TEST/DO (yes=1/no=0)? ###
#################################################
set clean                         = 1 ### REMOVE ALL FILES CREATED DURING PREVIOUS TESTS
set do_01_GenerateSnapshots       = 1 ### SNAPSHOTS SHOULD ALWAYS BE CREATED FOR SUBSEQUENT MM-PB/SA CALCULATIONS
set do_02_MMPBSA_Stability        = 0 ### SINGLE TRAJECTORY MM-PB/SA CALCULATION OF EFFECTIVE ENERGY
set do_03_MMPBSA_Binding          = 1 ### MM-PB/SA CALCULATION OF EFFECTIVE ENERGY OF BINDING
set do_04_MMPBSA_NmodeNAB         = 0 ### ENTROPY CALCULATION BY NMODE NORMAL MODE ANALYSIS USING NAB
set do_05_MMPBSA_Decomp_Residue   = 1 ### PER-RESIDUE DECOMPOSITION OF MM-PB/SA EFFECTIVE ENERGY OF BINDING
set do_06_MMPBSA_Decomp_Pair      = 0 ### PAIRWISE DECOMPOSITION OF MM-PB/SA EFFECTIVE ENERGY OF BINDING
set do_07_MMPBSA_Hyb              = 0 ### MM-PB/SA USING HYBRID SOLVATION METHOD
set do_08_MMPBSA_Nmode            = 0 ### ENTROPY CALCULATION BY NMODE NORMAL MODE ANALYSIS
set do_09_MMPBSA_Nmode_Decomp     = 0 ### DECOMPOSITION FOR NMODE
set do_10_MMPBSA_Binding_Parallel = 0 ### PARALLEL EXECUTION OF BINDING CALCULATION
set do_11_MMPBSA_APBS             = 0 ### SOLVATION FREE ENERGY CALCULATION USING APBS. THIS REQUIRES
                                      ### INSTALLATION OF sander.APBS 
#################################################
#################################################
#################################################

if( ! $?AMBERHOME ) then
  # Should really hard-code "Amber home" here?
  echo "Please specify AMBERHOME for Amber18"
  exit 0
endif
                    
if( ! $?TEST_mm_pbsa ) then
  setenv TEST_mm_pbsa ${AMBERHOME}/bin/mm_pbsa.pl
endif

  setenv MMPBSAEXAMPLES ${AMBER_SOURCE}/AmberTools/src/mm_pbsa/Examples
  setenv DACDIFF ${AMBER_SOURCE}/AmberTools/test/dacdif

######################################################
### REMOVE ALL FILES CREATED DURING PREVIOUS TESTS ###
######################################################
if ($clean == "1") then
  cd ${MMPBSAEXAMPLES}
  echo "CLEANING"
  ./Run.mmpbsa.clean
endif

### ###########################################
### ###    MM-PB/SA SNAPSHOT GENERATION     ###
### ###########################################
if ($do_01_GenerateSnapshots == "1") then

  /bin/rm -f ${MMPBSAEXAMPLES}/01_GenerateSnapshots/mm_pbsa.log
  /bin/rm -f ${MMPBSAEXAMPLES}/01_GenerateSnapshots/test_com.crd.1
  /bin/rm -f ${MMPBSAEXAMPLES}/01_GenerateSnapshots/test_com.crd.2
  /bin/rm -f ${MMPBSAEXAMPLES}/01_GenerateSnapshots/test_com.crd.3
  /bin/rm -f ${MMPBSAEXAMPLES}/01_GenerateSnapshots/test_lig.crd.1
  /bin/rm -f ${MMPBSAEXAMPLES}/01_GenerateSnapshots/test_lig.crd.2
  /bin/rm -f ${MMPBSAEXAMPLES}/01_GenerateSnapshots/test_lig.crd.3
  /bin/rm -f ${MMPBSAEXAMPLES}/01_GenerateSnapshots/test_rec.crd.1
  /bin/rm -f ${MMPBSAEXAMPLES}/01_GenerateSnapshots/test_rec.crd.2
  /bin/rm -f ${MMPBSAEXAMPLES}/01_GenerateSnapshots/test_rec.crd.3

  cd ${MMPBSAEXAMPLES}/01_GenerateSnapshots/
  echo "CALCULATING TEST: 01_GenerateSnapshots"
  ${TEST_mm_pbsa} mm_pbsa.in >&! mm_pbsa.log < /dev/null || goto error

  echo "CHECKING IN TEST: 01_GenerateSnapshots"

endif
### ###########################################
### ###    MM-PB/SA CALCULATION             ###
### ###########################################
if ($do_02_MMPBSA_Stability == "1") then

  /bin/rm -f ${MMPBSAEXAMPLES}/02_MMPBSA_Stability/mdinfo
  /bin/rm -f ${MMPBSAEXAMPLES}/02_MMPBSA_Stability/mm_pbsa.log
  /bin/rm -f ${MMPBSAEXAMPLES}/02_MMPBSA_Stability/test_com.all.out
  /bin/rm -f ${MMPBSAEXAMPLES}/02_MMPBSA_Stability/test_statistics.in
  /bin/rm -f ${MMPBSAEXAMPLES}/02_MMPBSA_Stability/test_statistics.out
  /bin/rm -f ${MMPBSAEXAMPLES}/02_MMPBSA_Stability/test_statistics.out.snap
  /bin/rm -f ${MMPBSAEXAMPLES}/02_MMPBSA_Stability/restrt

  cd ${MMPBSAEXAMPLES}/02_MMPBSA_Stability/
  echo "CALCULATING TEST: 02_MMPBSA_Stability"
  ${TEST_mm_pbsa} mm_pbsa.in >&! mm_pbsa.log < /dev/null || goto error

  echo "CHECKING IN TEST: 02_MMPBSA_Stability"
  ${DACDIFF} -r 2.e-5 ${MMPBSAEXAMPLES}/02_MMPBSA_Stability/test_statistics.out.save \
                      ${MMPBSAEXAMPLES}/02_MMPBSA_Stability/test_statistics.out

endif
### ###########################################
### ###    CALCULATING BINDING ENERGY       ###
### ###########################################
if ($do_03_MMPBSA_Binding == "1") then

  /bin/rm -f ${MMPBSAEXAMPLES}/03_MMPBSA_Binding/mdinfo
  /bin/rm -f ${MMPBSAEXAMPLES}/03_MMPBSA_Binding/mm_pbsa.log
  /bin/rm -f ${MMPBSAEXAMPLES}/03_MMPBSA_Binding/test_com.all.out
  /bin/rm -f ${MMPBSAEXAMPLES}/03_MMPBSA_Binding/test_lig.all.out
  /bin/rm -f ${MMPBSAEXAMPLES}/03_MMPBSA_Binding/test_rec.all.out
  /bin/rm -f ${MMPBSAEXAMPLES}/03_MMPBSA_Binding/test_statistics.in
  /bin/rm -f ${MMPBSAEXAMPLES}/03_MMPBSA_Binding/test_statistics.out
  /bin/rm -f ${MMPBSAEXAMPLES}/03_MMPBSA_Binding/test_statistics.out.snap
  /bin/rm -f ${MMPBSAEXAMPLES}/03_MMPBSA_Binding/restrt

  cd ${MMPBSAEXAMPLES}/03_MMPBSA_Binding/
  echo "CALCULATING TEST: 03_MMPBSA_Binding"
  ${TEST_mm_pbsa} mm_pbsa.in >&! mm_pbsa.log < /dev/null || goto error

  echo "CHECKING IN TEST: 03_MMPBSA_Binding"
  ${DACDIFF} -r 2.e-5 ${MMPBSAEXAMPLES}/03_MMPBSA_Binding/test_statistics.out.save \
                      ${MMPBSAEXAMPLES}/03_MMPBSA_Binding/test_statistics.out  

endif
### ##############################################
### ###    CALCULATING ENTROPY BY NMODE-NAB    ###
### ##############################################
if ($do_04_MMPBSA_NmodeNAB == "1") then

  /bin/rm -f ${MMPBSAEXAMPLES}/04_MMPBSA_NmodeNAB/mdinfo
  /bin/rm -f ${MMPBSAEXAMPLES}/04_MMPBSA_NmodeNAB/mm_pbsa.log
  /bin/rm -f ${MMPBSAEXAMPLES}/04_MMPBSA_NmodeNAB/test_lig.all.out
  /bin/rm -f ${MMPBSAEXAMPLES}/04_MMPBSA_NmodeNAB/test_statistics.in
  /bin/rm -f ${MMPBSAEXAMPLES}/04_MMPBSA_NmodeNAB/test_statistics.out
  /bin/rm -f ${MMPBSAEXAMPLES}/04_MMPBSA_NmodeNAB/test_statistics.out.snap

  cd ${MMPBSAEXAMPLES}/04_MMPBSA_NmodeNAB/
  echo "CALCULATING TEST: 04_MMPBSA_NmodeNAB"
  ${TEST_mm_pbsa} mm_pbsa.in >&! mm_pbsa.log < /dev/null || goto error

  echo "CHECKING IN TEST: 04_MMPBSA_NmodeNAB"
  ${DACDIFF} -r 2.e-5 ${MMPBSAEXAMPLES}/04_MMPBSA_NmodeNAB/test_statistics.out.save \
                      ${MMPBSAEXAMPLES}/04_MMPBSA_NmodeNAB/test_statistics.out

endif
### ###########################################
### ###    CALCULATING MM-GB/SA ENERGY      ###
### ###    DECOMPOSITION PER RESIDUE        ###
### ###########################################
if ($do_05_MMPBSA_Decomp_Residue == "1") then

  /bin/rm -f ${MMPBSAEXAMPLES}/05_MMPBSA_Decomp_Residue/mdinfo
  /bin/rm -f ${MMPBSAEXAMPLES}/05_MMPBSA_Decomp_Residue/mm_pbsa.log
  /bin/rm -f ${MMPBSAEXAMPLES}/05_MMPBSA_Decomp_Residue/test_com.all.out
  /bin/rm -f ${MMPBSAEXAMPLES}/05_MMPBSA_Decomp_Residue/test_lig.all.out
  /bin/rm -f ${MMPBSAEXAMPLES}/05_MMPBSA_Decomp_Residue/test_rec.all.out
  /bin/rm -f ${MMPBSAEXAMPLES}/05_MMPBSA_Decomp_Residue/test_statistics.in
  /bin/rm -f ${MMPBSAEXAMPLES}/05_MMPBSA_Decomp_Residue/test_statistics.out
  /bin/rm -f ${MMPBSAEXAMPLES}/05_MMPBSA_Decomp_Residue/restrt

  cd ${MMPBSAEXAMPLES}/05_MMPBSA_Decomp_Residue/
  echo "CALCULATING TEST: 05_MMPBSA_Decomp_Residue"
  ${TEST_mm_pbsa} mm_pbsa.in >&! mm_pbsa.log < /dev/null || goto error

  echo "CHECKING IN TEST: 05_MMPBSA_Decomp_Residue"
  ${DACDIFF} -r 2.e-5 ${MMPBSAEXAMPLES}/05_MMPBSA_Decomp_Residue/test_statistics.out.save \
                      ${MMPBSAEXAMPLES}/05_MMPBSA_Decomp_Residue/test_statistics.out

endif
### ###########################################
### ###    CALCULATING MM-GB/SA ENERGY      ###
### ###    DECOMPOSITION PAIRWISE           ###
### ###########################################
if ($do_06_MMPBSA_Decomp_Pair == "1") then

  /bin/rm -f ${MMPBSAEXAMPLES}/06_MMPBSA_Decomp_Pair/mdinfo
  /bin/rm -f ${MMPBSAEXAMPLES}/06_MMPBSA_Decomp_Pair/mm_pbsa.log
  /bin/rm -f ${MMPBSAEXAMPLES}/06_MMPBSA_Decomp_Pair/test_com.all.out
  /bin/rm -f ${MMPBSAEXAMPLES}/06_MMPBSA_Decomp_Pair/test_lig.all.out
  /bin/rm -f ${MMPBSAEXAMPLES}/06_MMPBSA_Decomp_Pair/test_rec.all.out
  /bin/rm -f ${MMPBSAEXAMPLES}/06_MMPBSA_Decomp_Pair/test_statistics.in
  /bin/rm -f ${MMPBSAEXAMPLES}/06_MMPBSA_Decomp_Pair/test_statistics.out
  /bin/rm -f ${MMPBSAEXAMPLES}/06_MMPBSA_Decomp_Pair/restrt

  cd ${MMPBSAEXAMPLES}/06_MMPBSA_Decomp_Pair/
  echo "CALCULATING TEST: 06_MMPBSA_Decomp_Pair"
  ${TEST_mm_pbsa} mm_pbsa.in >&! mm_pbsa.log < /dev/null || goto error

  echo "CHECKING IN TEST: 06_MMPBSA_Decomp_Pair"
  ${DACDIFF} -r 2.e-5 ${MMPBSAEXAMPLES}/06_MMPBSA_Decomp_Pair/test_statistics.out.save \
                      ${MMPBSAEXAMPLES}/06_MMPBSA_Decomp_Pair/test_statistics.out

endif
### ###########################################
### ### HYBRID SOLVENT MM-PB/SA CALCULATION ###
### ### Alexander Metz, Holger Gohlke       ###
### ###########################################
if ($do_07_MMPBSA_Hyb == "1") then
###
### System: Solvated ligand of IL2 (PDB-CODE 1M48)
###
### 1. Prior to the calculation of hybrid solvation free energyies, image the
### solvent back into the simulation cell and center the solvent to the origin.
### The latter makes defining the center of the solvation sphere trivial
### (XCAP=0.0; YCAP = 0.0; ZCAP=0.0; see mm_pbsa.in file). Note that all of the
### solvent molecules should be considered during snapshot creation
### (as in the 01_SNAPS_SOLV directory); the use of just a sphere or shell of water
### molecules may cause problems if counterions are able to cross the explicit/implicit
### border between different snapshots.
### 2. Calculation of gasphase energies is done in an additional step. Snapshots
### without solvent molecules need to be generated for this (as in the
### 02_SNAPS_DESOLV directory).
### 3. Parameter and topology files for the solvated and nonsolvated systems are in the
### directories 03_PRM_S and 04_PRM_DES, resp.
### 4. Calculation of the hybrid solvation free energy and the gasphase energy is
### carried out in the directories 05_HYB_SOLV_ENE and 06_GASPHASE_ENE, resp.

  unlimit

  /bin/rm -f ${MMPBSAEXAMPLES}/07_MMPBSA_Hyb/05_HYB_SOLV_ENE/mdinfo
  /bin/rm -f ${MMPBSAEXAMPLES}/07_MMPBSA_Hyb/05_HYB_SOLV_ENE/mm_pbsa.log
  /bin/rm -f ${MMPBSAEXAMPLES}/07_MMPBSA_Hyb/05_HYB_SOLV_ENE/restrt
  /bin/rm -f ${MMPBSAEXAMPLES}/07_MMPBSA_Hyb/05_HYB_SOLV_ENE/SNAP_lig_rec.all.out
  /bin/rm -f ${MMPBSAEXAMPLES}/07_MMPBSA_Hyb/05_HYB_SOLV_ENE/SNAP_lig_statistics.in
  /bin/rm -f ${MMPBSAEXAMPLES}/07_MMPBSA_Hyb/05_HYB_SOLV_ENE/SNAP_lig_statistics.out
  /bin/rm -f ${MMPBSAEXAMPLES}/07_MMPBSA_Hyb/05_HYB_SOLV_ENE/SNAP_lig_statistics.out.snap

  cd ${MMPBSAEXAMPLES}/07_MMPBSA_Hyb/05_HYB_SOLV_ENE/
  echo "CALCULATING TEST: 07_MMPBSA_Hyb (HYBRID SOLVATION ENERGY)"
  ${TEST_mm_pbsa} mm_pbsa.in >&! mm_pbsa.log < /dev/null || goto error

  echo "CHECKING IN TEST: 07_MMPBSA_Hyb (HYBRID SOLVATION ENERGY)"
  ${DACDIFF} -r 2.e-5 ${MMPBSAEXAMPLES}/07_MMPBSA_Hyb/05_HYB_SOLV_ENE/SNAP_lig_statistics.out.save \
                      ${MMPBSAEXAMPLES}/07_MMPBSA_Hyb/05_HYB_SOLV_ENE/SNAP_lig_statistics.out

  /bin/rm -f ${MMPBSAEXAMPLES}/07_MMPBSA_Hyb/06_GASPHASE_ENE/mdinfo
  /bin/rm -f ${MMPBSAEXAMPLES}/07_MMPBSA_Hyb/06_GASPHASE_ENE/mm_pbsa.log
  /bin/rm -f ${MMPBSAEXAMPLES}/07_MMPBSA_Hyb/06_GASPHASE_ENE/restrt
  /bin/rm -f ${MMPBSAEXAMPLES}/07_MMPBSA_Hyb/06_GASPHASE_ENE/SNAP_lig_rec.all.out
  /bin/rm -f ${MMPBSAEXAMPLES}/07_MMPBSA_Hyb/06_GASPHASE_ENE/SNAP_lig_statistics.in
  /bin/rm -f ${MMPBSAEXAMPLES}/07_MMPBSA_Hyb/06_GASPHASE_ENE/SNAP_lig_statistics.out
  /bin/rm -f ${MMPBSAEXAMPLES}/07_MMPBSA_Hyb/06_GASPHASE_ENE/SNAP_lig_statistics.out.snap

  cd ${MMPBSAEXAMPLES}/07_MMPBSA_Hyb/06_GASPHASE_ENE/
  echo "CALCULATING TEST: 07_MMPBSA_Hyb (GASPHASE ENERGY)"
  ${TEST_mm_pbsa} mm_pbsa.in >&! mm_pbsa.log < /dev/null || goto error

  echo "CHECKING IN TEST: 07_MMPBSA_Hyb (GASPHASE ENERGY)"
  ${DACDIFF} -r 2.e-5 ${MMPBSAEXAMPLES}/07_MMPBSA_Hyb/06_GASPHASE_ENE/SNAP_lig_statistics.out.save \
                      ${MMPBSAEXAMPLES}/07_MMPBSA_Hyb/06_GASPHASE_ENE/SNAP_lig_statistics.out

### 5. From these two calculations, effective energies are obtained by adding the
### corresponding values in the columns of the ~_statistics.out files manually.
### That is, add the PBTOT energy of 05_HYB_SOLV_ENE/~_statistics.out to the GAS
### energy of 06_GASPHASE_ENE/~_statistics.out.
###
### Below are some explanations of the output of the hybrid solvation free energy calculation:
###
### EDISPER: Part of the nonpolar solvation free energy due to attractive dispersion interactions,
###          calculated by summing van der Waals interactions between the solute and the solvent
###          molecules. Interactions between solvent molecules or within the solute are not considered.
### ELRAELE: Electrostatic part of the solvation free energy, calculated using a linear response
###          approximation taking into account the explicit solvent.
###          Note that the output in the ~.all.out files is in units of kT (see below).
### EPB:     Electrostatic part of the solvation free energy originating from the reaction field
###          outside the region of explicit solvent. This contribution is calculated using the
###          Poisson-Boltzmann approach.
###          Note that the output in the ~.all.out files is in units of kT (see below).
### corrected reaction field energy: Sum of ELRAELE and EPB
### surface area: The solvent-excluded surface area in [A^2].
### ECAVITY: The solvent-excluded surface area in [A^2].
### PBSUR  : Part of the nonpolar solvation free energy due to the formation a cavity for the solute.
###          Taken to be proportional to the solvent-excluded surface area, with the factor
###          gamma = 0.069 [kcal/mol*A^2] and theconstant beta = 0.0 [kcal/mol].
### PBCAL  : PBCAL = PBELE + GAS
###          As no electrostatic gasphase contribution is calculated during the hybrid solvation step,
###          PBCAL = PBELE.
### PBSOL  : PBSOL = EDISPER + PBSUR + ELRAELE (converted to [kcal/mol]) + EPB (converted to [kcal/mol]);
###          the total solvation free energy.
### PBELE  : PBELE =ELRAELE (converted to [kcal/mol]) + EPB (converted to [kcal/mol]);
###          total electrostatic part of the solvation free energy.
### PBTOT  : PBTOT = PBSOL
###          To get to the effective energy for snapshots, the gasphase energy has to be added to this number.
###
### The ELRAELE, EPB, and "corrected reaction field energy" in the ~.all.out files are given in units of kT.
### The conversion factor from kT units to kcal/mol is:
### (300.0 [K] * 8.314 [J/mol*K]) / 1000.0 * 4.184 [cal] = 0.5961281070745697897 kcal/kT

endif
### ##############################################
### ###    CALCULATING ENTROPY BY NMODE-NAB    ###
### ##############################################
if ($do_08_MMPBSA_Nmode == "1") then

  /bin/rm -f ${MMPBSAEXAMPLES}/08_MMPBSA_Nmode/mdinfo
  /bin/rm -f ${MMPBSAEXAMPLES}/08_MMPBSA_Nmode/mm_pbsa.log
  /bin/rm -f ${MMPBSAEXAMPLES}/08_MMPBSA_Nmode/test_lig.all.out
  /bin/rm -f ${MMPBSAEXAMPLES}/08_MMPBSA_Nmode/test_statistics.in
  /bin/rm -f ${MMPBSAEXAMPLES}/08_MMPBSA_Nmode/test_statistics.out
  /bin/rm -f ${MMPBSAEXAMPLES}/08_MMPBSA_Nmode/test_statistics.out.snap

  cd ${MMPBSAEXAMPLES}/08_MMPBSA_Nmode/
  echo "CALCULATING TEST: 08_MMPBSA_Nmode"
  ${TEST_mm_pbsa} mm_pbsa.in >&! mm_pbsa.log < /dev/null || goto error

  echo "CHECKING IN TEST: 08_MMPBSA_Nmode"
  ${DACDIFF} -r 2.e-5 ${MMPBSAEXAMPLES}/08_MMPBSA_Nmode/test_statistics.out.save \
                      ${MMPBSAEXAMPLES}/08_MMPBSA_Nmode/test_statistics.out

endif
### ###########################################
### ###    CALCULATING ENTROPY BY NMODE     ###
### ###    DECOMPOSITION PER RESIDUE        ###
### ###########################################
if ($do_09_MMPBSA_Nmode_Decomp == "1") then

  /bin/rm -f ${MMPBSAEXAMPLES}/09_MMPBSA_Nmode_Decomp/mdinfo
  /bin/rm -f ${MMPBSAEXAMPLES}/09_MMPBSA_Nmode_Decomp/mm_pbsa.log
  /bin/rm -f ${MMPBSAEXAMPLES}/09_MMPBSA_Nmode_Decomp/test_lig.all.out
  /bin/rm -f ${MMPBSAEXAMPLES}/09_MMPBSA_Nmode_Decomp/test_statistics.in
  /bin/rm -f ${MMPBSAEXAMPLES}/09_MMPBSA_Nmode_Decomp/test_statistics.out

  cd ${MMPBSAEXAMPLES}/09_MMPBSA_Nmode_Decomp/
  echo "CALCULATING TEST: 09_MMPBSA_Nmode_Decomp"
  ${TEST_mm_pbsa} mm_pbsa.in >&! mm_pbsa.log < /dev/null || goto error

  echo "CHECKING IN TEST: 09_MMPBSA_Nmode_Decomp"
  ${DACDIFF} -r 2.e-5 ${MMPBSAEXAMPLES}/09_MMPBSA_Nmode_Decomp/test_statistics.out.save \
                      ${MMPBSAEXAMPLES}/09_MMPBSA_Nmode_Decomp/test_statistics.out

endif
### #######################################################
### ###    CALCULATING BINDING ENERGY IN PARALLEL       ###
### #######################################################
if ($do_10_MMPBSA_Binding_Parallel == "1") then

  /bin/rm -f ${MMPBSAEXAMPLES}/10_MMPBSA_Binding_Parallel/mdinfo
  /bin/rm -f ${MMPBSAEXAMPLES}/10_MMPBSA_Binding_Parallel/mm_pbsa.log
  /bin/rm -f ${MMPBSAEXAMPLES}/10_MMPBSA_Binding_Parallel/test_com.all.out
  /bin/rm -f ${MMPBSAEXAMPLES}/10_MMPBSA_Binding_Parallel/test_lig.all.out
  /bin/rm -f ${MMPBSAEXAMPLES}/10_MMPBSA_Binding_Parallel/test_rec.all.out
  /bin/rm -f ${MMPBSAEXAMPLES}/10_MMPBSA_Binding_Parallel/test_statistics.in
  /bin/rm -f ${MMPBSAEXAMPLES}/10_MMPBSA_Binding_Parallel/test_statistics.out
  /bin/rm -f ${MMPBSAEXAMPLES}/10_MMPBSA_Binding_Parallel/test_statistics.out.snap
  /bin/rm -f ${MMPBSAEXAMPLES}/10_MMPBSA_Binding_Parallel/restrt

  cd ${MMPBSAEXAMPLES}/10_MMPBSA_Binding_Parallel/
  echo "CALCULATING TEST: 10_MMPBSA_Binding_Parallel"
  ${TEST_mm_pbsa} mm_pbsa.in >&! mm_pbsa.log < /dev/null || goto error

  echo "CHECKING IN TEST: 10_MMPBSA_Binding_Parallel"
  ${DACDIFF} -r 2.e-5 ${MMPBSAEXAMPLES}/10_MMPBSA_Binding_Parallel/test_statistics.out.save \
                      ${MMPBSAEXAMPLES}/10_MMPBSA_Binding_Parallel/test_statistics.out  

endif
################################################
################################################
################################################

### ########################################################
### ###    CALCULATING SOLVATION FREE ENERGY WITH APBS   ###
### ########################################################
if ($do_11_MMPBSA_APBS == "1") then
  if( ! -e $AMBERHOME/bin/sander.APBS ) then
    echo "Please install sander.APBS before running test 11_MMPBSA_APBS"
    exit 0
  endif

  /bin/rm -f ${MMPBSAEXAMPLES}/11_MMPBSA_APBS/mdinfo
  /bin/rm -f ${MMPBSAEXAMPLES}/11_MMPBSA_APBS/mm_pbsa.log
  /bin/rm -f ${MMPBSAEXAMPLES}/11_MMPBSA_APBS/1az6_rec.all.out
  /bin/rm -f ${MMPBSAEXAMPLES}/11_MMPBSA_APBS/1az6_statistics.in
  /bin/rm -f ${MMPBSAEXAMPLES}/11_MMPBSA_APBS/1az6_statistics.out
  /bin/rm -f ${MMPBSAEXAMPLES}/11_MMPBSA_APBS/1az6_statistics.out.snap
  /bin/rm -f ${MMPBSAEXAMPLES}/11_MMPBSA_APBS/iapbs-charge.dx
  /bin/rm -f ${MMPBSAEXAMPLES}/11_MMPBSA_APBS/iapbs-pot.dx
  /bin/rm -f ${MMPBSAEXAMPLES}/11_MMPBSA_APBS/iapbs_rec.1.out
  /bin/rm -f ${MMPBSAEXAMPLES}/11_MMPBSA_APBS/iapbs-smol.dx
  /bin/rm -f ${MMPBSAEXAMPLES}/11_MMPBSA_APBS/io.mc
  /bin/rm -f ${MMPBSAEXAMPLES}/11_MMPBSA_APBS/restrt
  /bin/rm -f ${MMPBSAEXAMPLES}/11_MMPBSA_APBS/sander_rec.1.out
  /bin/rm -f ${MMPBSAEXAMPLES}/11_MMPBSA_APBS/sander_rec.in
 
  cd ${MMPBSAEXAMPLES}/11_MMPBSA_APBS/
  echo "CALCULATING TEST: 11_MMPBSA_APBS"
  ${TEST_mm_pbsa} mm_pbsa.in >&! mm_pbsa.log < /dev/null || goto error

  echo "CHECKING IN TEST: 11_MMPBSA_APBS"
  ${DACDIFF} -r 2.e-5 ${MMPBSAEXAMPLES}/11_MMPBSA_APBS/1az6_statistics.out.save \
                      ${MMPBSAEXAMPLES}/11_MMPBSA_APBS/1az6_statistics.out

endif

exit(0)

error:
echo "  ${0}:  Program error"
exit(1)
