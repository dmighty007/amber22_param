#!/bin/sh
#TEST-PROGRAM sander
#TEST-DESCRIP TO_BE_DEtermined
#TEST-PURPOSE regression, basic
#TEST-STATE   undocumented

. ../../program_error.sh

sander="$AMBERHOME/bin/sander.MPI"
if [ ! -z "$TESTsander" ]; then
   sander=$TESTsander
fi

if [ -z "$DO_PARALLEL" ]; then
   echo "Constant E REMD requires a parallel environment; skipping this test"
   exit 0
fi

set log = rem.log
set output = rem.out

numprocs=`$DO_PARALLEL ../../numprocs`

if [ "`basename $sander`" = "pmemd.MPI" -o "`basename $sander`" = "pmemd.mic_offload.MPI"  ]; then
   if [ "$numprocs" -ne 4 ]; then
      echo "Constant E REMD test needs 4 processors to run (you selected "$numprocs")"
      exit 0
   fi
else
   if [ "$numprocs" -ne 2 -a "$numprocs" -ne 4 ]; then
      echo "Constant E REMD test needs 2 or 4 processors to run (you selected "$numprocs")"
      exit 0
   fi
fi

/bin/rm -f $log $output.00?

$DO_PARALLEL $sander -O -ng 2 -groupfile groupfile < /dev/null || error

../../dacdif E0.84.ceout.000.save E0.84.ceout.000
if [ "`basename $TESTsander`" = "pmemd" -o "`basename $TESTsander`" = "pmemd.MPI" \
      -o "`basename $TESTsander`" = "pmemd.mic_offload.MPI" ]; then
   if [ "`basename $TESTsander`" = "pmemd.mic_offload.MPI" ]; then
      ../../dacdif -r 1.0e-05 E0.84.out.000.pmemd.save E0.84.out.000
   else   
      ../../dacdif E0.84.out.000.pmemd.save E0.84.out.000
   fi
else
   ../../dacdif E0.84.out.000.save E0.84.out.000
fi
../../dacdif rem.log.save rem.log

/bin/rm -f E0.84.ceout.001 E0.84.out.001 rem.type info.00? E0.84.crd.00? \
      E0.84.rst.00? E0.84.cerst.00?
exit 0
