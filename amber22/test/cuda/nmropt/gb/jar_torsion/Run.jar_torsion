#!/bin/csh -f
#TEST-PROGRAM sander pmemd
#TEST-DESCRIP Test dihedral restraints using nmropt = 1
#TEST-PURPOSE basic pedagogical
#TEST-STATE   ok

#$1 = PREC_MODEL
#$2 = NETCDF

#Note that the GPU mdout files may have fundamental errors when diffed with the
#CPU mdouts due to GPU not supporting Jarzynski and COM tests

if( ! $?DO_PARALLEL ) then
  setenv DO_PARALLEL " "
  if( $?TESTsander ) then
      set sander = $TESTsander
  else
      set sander = ${AMBERHOME}/bin/pmemd.cuda_$1
  endif
else
  if( $?TESTsander ) then
      set sander = $TESTsander
  else
      set sander = ${AMBERHOME}/bin/pmemd.cuda_$1.MPI
  endif
endif

cat > mdin <<EOF
Test of angle restraints using nmropt=1
 &cntrl                                                                        
   nstlim=20,
   ntpr=1, ntt=1,
   dt=0.001,
   igb=5, 
   nmropt=1, jar=1,
   ig=71277,
   cut=99999,
 /
 &wt type='DUMPFREQ', istep1=2  /
 &wt type='END'   /
DISANG=jartorsion_gb.RST
DUMPAVE=jartorsion_gb.dat
LISTIN=POUT
LISTOUT=POUT
/
EOF

cat > jartorsion_gb.RST << EOF
#  torsion restraint for residue 34
 &rst  iat=720,719,710,711 r2=17.87, rk2 = 400.0, r2a = 19.87,
 /
EOF

set output = mdout
set vs_t_output = jartorsion_gb.dat
set output_save = $output.GPU_$1
set vs_t_output_save = $vs_t_output.GPU_$1

touch dummy
$DO_PARALLEL $sander -O -p ../myoglobin_gb.prmtop -c ../myoglobin_gb.inpcrd -i mdin -o $output <dummy || goto error

#Use different dacdif tolerances based on precision model.
if ( "$1" == "DPFP" ) then
  #7 sig figs
  ../../../../dacdif -r 1.0e-7 $output_save $output
  ../../../../dacdif -r 1.0e-7 $vs_t_output_save $vs_t_output
else
  if ( $?DO_PARALLEL ) then
    #Use slightly less precision for parallel runs.
    #3 sig figs
    ../../../../dacdif -r 1.0e-3 $output_save $output
    ../../../../dacdif -r 1.0e-3 $vs_t_output_save $vs_t_output
  else
    #4 sig figs
    ../../../../dacdif -r 1.0e-4 $output_save $output
    ../../../../dacdif -r 1.0e-4 $vs_t_output_save $vs_t_output
  endif
endif


/bin/rm -f mdin restrt mdinfo profile_mpi logfile dummy
exit 0

error:
echo "  ${0}:  Program error"
exit(1)


