#!/bin/csh -f
#TEST-PROGRAM sander
#TEST-DESCRIP TO_BE_DEtermined
#TEST-PURPOSE regression, basic
#TEST-STATE   undocumented

set sander = "${AMBERHOME}/bin/sander.LES.MPI"
ln -sf ../../numprocs.awk

if( $?TESTsander ) then
   set sander = $TESTsander
endif

if( ! $?DO_PARALLEL ) then
  echo " evb can only be run parallel: set env var DO_PARALLEL"
  echo " Not running test, exiting....."
  exit(0)
else
	set numprocs=`echo $DO_PARALLEL | awk -f numprocs.awk `
	if ( "$numprocs" > 2 ) then
	    echo " DO_PARALLEL set to $DO_PARALLEL"
	    goto toomany
	else if ( $?MP_PROCS)then
	    if ($MP_PROCS > 2)then
#               --- For IBM AIX ---
		echo "    MP_PROCS set to "$MP_PROCS
		goto toomany
	    endif
	endif
endif
endif

ln -sf ../malon_DG-EVB_files/malonaldehydeTS_35.fchk
ln -sf ../malon_DG-EVB_files/malonaldehydeR_35.fchk
ln -sf ../malon_DG-EVB_files/malonaldehydeP_35.fchk

# Test lambda = 0.8 at TS region.
set output1 = mr_les-.8.out
set output2 = mp_les-.8.out
set output3 = evbout-.8
$DO_PARALLEL $sander -ng 2 -nslice 32 -groupfile evb.grpf_template_L_0_S6_l_.8 < /dev/null || goto error
cp evbout $output3
../../dacdif -r 1.e-4 $output1.save $output1
../../dacdif -r 1.e-4 $output2.save $output2
../../dacdif -r 1.e-2 $output3.save $output3
/bin/rm -f mdinfo mr_les-.8.rst mp_les-.8.rst

# Test lambda = 0.4 at RS region.
set output1 = mr_les-.4.out
set output2 = mp_les-.4.out
set output3 = evbout-.4
$DO_PARALLEL $sander -ng 2 -nslice 32 -groupfile evb.grpf_template_L_-.60_GS6_l_.4 < /dev/null || goto error
cp evbout $output3
../../dacdif -r 1.e-4 $output1.save $output1
../../dacdif -r 1.e-4 $output2.save $output2
../../dacdif -r 1.e-2 $output3.save $output3
/bin/rm -f mdinfo mr_les-.4.rst mp_les-.4.rst

exit(0)

error:
echo "  ${0}:  Program error"
exit(1)

toomany:
    echo " too many processors for this test, exiting"
    echo "============================================================"
    exit(0)










