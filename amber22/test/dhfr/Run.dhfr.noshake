#!/bin/csh -f
#TEST-PROGRAM sander
#TEST-DESCRIP TO_BE_DEtermined
#TEST-PURPOSE regression, basic
#TEST-STATE   undocumented

set sander = "${AMBERHOME}/bin/sander"
if( $?TESTsander ) then
   set sander = $TESTsander
endif

if ( X$1 == "X-psander" ) then
  set sander = "psander"
  if( $?TESTpsander ) then
     set sander = $TESTpsander
  endif
  if( ! $?DO_PARALLEL ) then
    echo " psander can only be run parallel: set env var DO_PARALLEL"
    echo " Not running test, exiting....."
    exit 1
  endif
endif

if( ! $?DO_PARALLEL ) then
        setenv DO_PARALLEL " "
endif

set output = mdout.dhfr.noshake

cat > gbin <<EOF
 short md, nve ensemble
 &cntrl
   ntx=5, irest=1,
   ntc=1, ntf=1, tol=0.0000001, 
   nstlim=10, ntt=0, 
   ntpr=1, ntwr=10000, 
   dt=0.001, vlimit=10.0, ig=71277,
 /
 &ewald
   nfft1 = 72, nfft2 = 60, nfft3 = 54,
 /
EOF

touch dummy
$DO_PARALLEL $sander -O -i gbin -c md12.x -o $output < dummy || goto error

if ( `basename $sander` == "pmemd.mic_offload.MPI" ) then
../dacdif -r 1.0e-08 $output.save $output
else
../dacdif $output.save $output
endif
/bin/rm -f gbin restrt mdinfo dummy
exit(0)

error:
echo "  ${0}:  Program error"
exit(1)
