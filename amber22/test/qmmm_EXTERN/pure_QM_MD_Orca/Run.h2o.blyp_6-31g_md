#!/bin/csh -f
#TEST-PROGRAM sander
#TEST-DESCRIP TO_BE_DEtermined
#TEST-PURPOSE regression, basic
#TEST-STATE   undocumented

../../check_Orca.x
if( $status > 0) then
  exit(0)
endif

set sander = "${AMBERHOME}/bin/sander"
if( $?TESTsander ) then
    set sander = $TESTsander
endif

if( $?DO_PARALLEL ) then
   echo "This test not set up for parallel"
   echo "Parallelism treated within Orca"
   echo "Specify environment variable ORC_NCPUS"
   echo "to run ORCA on multiple CPU cores for this test"
   exit 0
endif

# check on how many CPU core ORCA shall be running
if ( $?ORC_NCPUS) then
    if ( $ORC_NCPUS > 1 ) then
        echo "ORCA will run on $ORC_NCPUS CPU cores"
    endif
else
    set ORC_NCPUS = 1
    echo "ORCA will run on 1 CPU core"
    echo "(environment variable ORC_NCPUS not set)"
endif

cat > mdin <<EOF
2 steps NVE pure QM MD with Orca (dt=0.5fs, no shake)
 &cntrl
  imin   = 0,           !no minimization
  irest  = 1,           !restart
  ntx    = 5,           !coordinates and velocities are read in
  cut    = 9999.9       !non-bonded interactions cutoff
  dt     = 0.0005,      !0.5fs time step
  ntb    = 0,           !no periodicity and PME off!
  ntt    = 0,           !turn off thermostat
  ntpr   = 1,           !print details to log every 10 steps (every 5fs)
  ntwx   = 1,           !write coordinates to mdcrd every 10 steps (every 5fs)
  ntwr   = 2,           !write restart file at last step
  nstlim = 2,           !run for 2 steps (1 fs at dt=0.5fs)
  nscm   = 0,           !No removal of COM motion,
  ioutfm = 1,           !NetCDF MDCRD.
  ifqnt  = 1,
 /
 &qmmm
  qmmask    = '@*',
  qmcharge  = 0,
  qm_theory = 'EXTERN',
  verbosity = 0,
 /
 &orc
  basis  = '6-31g',
  method = 'blyp NoRI',
  num_threads = $ORC_NCPUS
 /
EOF

set output = h2o.blyp_6-31g_md.out
rm -f $output

touch dummy
$sander -O -p h2o.prmtop -c h2o.restrt -o $output < dummy || goto error

# remove info about number of threads from output as this may vary
grep -v 'num_threads' $output > tmp
mv tmp $output

../../dacdif -t 1 $output.save $output

/bin/rm -f dummy mdin mdinfo mdcrd dummy restrt inpfile.xyz orc_job.* old.orc_job.*
exit(0)

error:
echo "  ${0}:  Program error"
exit(1)









