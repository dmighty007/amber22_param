#!/bin/sh
#TEST-PROGRAM sander
#TEST-DESCRIP TO_BE_DEtermined
#TEST-PURPOSE regression, basic
#TEST-STATE   undocumented
if [ -z "$TESTsander" ]; then
   TESTsander="${AMBERHOME}/bin/sander"
fi
if [ -z "$DO_PARALLEL" ]; then
   DO_PARALLEL=" "
else
   echo "This test not set up for parallel"
   echo " cannot run in parallel with pbsa"
   exit 1
fi

output="mdout.lig.min"

cat > min.in <<EOF
complex
&cntrl
  imin=5, maxcyc=1,
  cut=16, ntb=0,
  ipb=1,  inp=0
/
&pb
  xmin=-8.75, ymin=-4.75, zmin= -18.75,
  xmax=13.75, ymax=17.75, zmax= 3.75,
  buffer=8, maxarcdot=7000,
  cutnb=12., radiopt=0, dprob=1.4, 
  npbverb=1, npbgrid=1000,
  bcopt=5, eneopt=1, frcopt=0, smoothopt=0, arcres=0.0625, nfocus=2,
/
& end
EOF

$DO_PARALLEL $TESTsander -O -i min.in -y inptraj -o $output < /dev/null \
	|| { echo "  ${0}:  Program error"; exit 1; }
sed -i -e "s/ENE=/ENE /g" $output
../dacdif -r 5e-5 $output.save $output
#              1234567890123456
/bin/rm -f min.in restrt mdinfo
exit 0









