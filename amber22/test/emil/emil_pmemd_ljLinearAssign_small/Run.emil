#!/bin/csh -f
#TEST-PROGRAM pmemd
#TEST-DESCRIP TO_BE_DEtermined
#TEST-PURPOSE regression, advanced
#TEST-STATE   undocumented

# Makefile passes in value of EMIL
if ( "$1" == "" ) then
  echo "EMIL was not configured at build time (or flag was not passed in):"
  echo "skipping test."
  echo 'Run $AMBERHOME/configure for more information.'
  exit(0)
endif

if( ! $?DO_PARALLEL ) then
	echo "Serial test of pmemd/emil with emil_sc option set." 
        if( ! $?TESTsander ) set TESTsander = "${AMBERHOME}/bin/pmemd"
        set DO_PARALLEL=" "
else
	echo "DO_PARALLEL is set: $DO_PARALLEL"
        echo "Skipping test emil_ljLinearAssign: only two particles, so will not work in parallel."
        echo "=============================================================="
        exit ( 0 )
endif

set lambdas =  "0.0 0.1 0.3 0.5 0.7 0.900 0.999 1.0"
foreach lambda ($lambdas)

mkdir -p lj2_$lambda


cat > lj2_$lambda/mdin <<EOF
  Input file for emil run, detailed emil params are in emilParameters.in 
 &cntrl
  iwrap  = 0,
  ntx = 1, irest = 0, 
  ntb = 1, ntp = 0,
  cut = 2.5, 
  ntc = 1, ntf = 1,
  tempi = 0.00001, temp0 = 0.00001,
  ntt = 3, gamma_ln=1.0,
  nstlim = 250,
  dt = 0.005,
  ntpr = 10, ntwx = 10, ntwr = 5000,
  ntave = 100000,
  ig = 1902,
  ntr    = 0, vlimit = 0,
  emil_do_calc = 1,
  logdvdl = 1,
  emil_sc = 1, icfe = 1, ifsc = 1, clambda = $lambda,
 /
 &emil_cntrl
  emil_paramfile = "emilParameters.in", 
  emil_logfile   = "emil.log", 
!  emil_model_infile  = "wellsIn.dat",
  emil_model_outfile = "wells.dat",
 /

EOF




##generate input file for emil run
cat > lj2_$lambda/emilParameters.in <<EOF

##well description
EpsilonTrap      5.0
epsilonWell    500000.0
rWell            1.0 
   
rTrap            5.0    
rEqTrap          1.0    
wingForce        1.111

##print frequency (and averaging window) of gen force
printEvery       1

##define molecules in each phase
#assignedLiquidRes        WAT
solidRes WAT

assignmentMethod 1

##emil has its own RNG 
Seed             1902

lambda           $lambda

EOF



echo "Running emil_sc for lambda=$lambda"



cd lj2_$lambda
if ( "$lambda" != "1.0" ) then
$DO_PARALLEL $TESTsander -O -i mdin \
                          -c ../lj2.crd \
                          -p ../lj2.top \
                          -o mdout >& emil.stderr  
else
$DO_PARALLEL $TESTsander -O -i mdin \
                          -c ../lj2.crd \
                          -p ../lj2.top \
                          -o mdout >& emil.stderr  
endif
cd ..

end ##loop over lambda

##generate A vs Time data file A.dat
touch A.dat
./getFreeEnergy.bash

##uncomment these lines to regenerate the reference sets.
#cp A.dat  A.dat.save

../../dacdif -t 2 A.dat.save A.dat 

make -s clean

exit(0)

error:
echo "  ${0}:  Program error"
exit(1)










