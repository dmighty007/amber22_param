#!/bin/csh -f
#TEST-PROGRAM sander
#TEST-DESCRIP TO_BE_DEtermined
#TEST-PURPOSE regression, basic
#TEST-STATE   undocumented

set sander = "${AMBERHOME}/bin/sander"
if( $?TESTsander ) then
   set sander = $TESTsander
endif

if( ! $?DO_PARALLEL ) then
        setenv DO_PARALLEL " "
endif

cat > mdin <<EOF
 equilibration, polarizable solute
 &cntrl
  irest  = 1, ntx    = 5,
  ntb    = 2, ntp    = 1, taup=0.5,
  cut    = 8.0,
  ntf=2, ntc=2, tol=0.000001,
  nstlim=50, ntpr=1,
  ntt=1, temp0=300., tautp=0.5,
  dt=0.001, 
  jfastw=1, watnam='TP4', barostat=2
  mcbarint=2, ig=71277,
 /
 &ewald
   skinnb=1.0, nfft1=18, nfft2=18, nfft3=18, 
 /
EOF

cat > mdin2 <<EOF
 equilibration, anisotropic scaling
 &cntrl
  irest  = 1, ntx    = 7,
  ntb    = 2, ntp    = 2, taup=0.5,
  cut    = 8.0,
  ntf=2, ntc=2, tol=0.000001,
  nstlim=50, ntpr=1,
  ntt=1, temp0=300., tautp=0.5,
  dt=0.001, 
  jfastw=1, watnam='TP4', barostat=2
  mcbarint=2, ig=71277,
 /
 &ewald
   skinnb=1.0, nfft1=18, nfft2=18, nfft3=18, 
 /
EOF

touch dummy
$DO_PARALLEL $sander -O -i mdin -c eq12.x -o mdout.mcbar.tip4p < dummy || goto error
$DO_PARALLEL $sander -O -i mdin2 -c eq12.x -o mdout.mcbar_aniso.tip4p < dummy || goto error

if( "`basename $sander`" == "sander" || "`basename $sander`" == "sander.MPI" ) then
   # Rename the files so we don't break the update script
   mv mdout.mcbar.tip4p mdout.mcbar.tip4p.sander
   mv mdout.mcbar_aniso.tip4p mdout.mcbar_aniso.tip4p.sander
   ../dacdif mdout.mcbar.tip4p.sander.save mdout.mcbar.tip4p.sander
   ../dacdif mdout.mcbar_aniso.tip4p.sander.save mdout.mcbar_aniso.tip4p.sander
else
   ../dacdif -r 1.e-06 mdout.mcbar.tip4p.save mdout.mcbar.tip4p
   ../dacdif -r 1.e-06 mdout.mcbar_aniso.tip4p.save mdout.mcbar_aniso.tip4p
endif

/bin/rm -f mdin restrt mdinfo dummy mdin2
exit(0)

error:
echo "  ${0}:  Program error"
exit(1)
