#!/bin/csh -f
#TEST-PROGRAM pmemd.cuda
#TEST-DESCRIP TO_BE_DEtermined
#TEST-PURPOSE regression, basic
#TEST-STATE   undocumented

#$1 = PREC_MODEL
#$2 = NETCDF

if( ! $?DO_PARALLEL ) then
  setenv DO_PARALLEL " "
  if( $?TESTsander ) then
      set sander = $TESTsander
  else
      set sander = ${AMBERHOME}/bin/pmemd.cuda_$1
  endif
else
  if( $?TESTsander ) then
      set sander = $TESTsander
  else
      set sander = ${AMBERHOME}/bin/pmemd.cuda_$1.MPI
  endif
endif


cat > mdin <<EOF
 short md, nve ensemble
 &cntrl
   ntx=5, irest=1,
   ntc=2, ntf=2, tol=0.0000001, 
   nstlim=10, ntt=0, 
   ntpr=1, ntwr=10000, 
   dt=0.001, ig=71277, 
   efx=1,efy=1,efz=1,efphase=2,effreq=2,
 /
 &ewald
   nfft1=60, nfft2=60, nfft3=60,netfrc=0,
 /
EOF

set output = mdout.pure_wat_efield

set output_save = $output.GPU_$1

touch dummy
$DO_PARALLEL $sander -O -i mdin -c eq1.x -o $output <dummy || goto error
#Use different dacdif tolerances based on precision model.
if ( "$1" == "DPFP" ) then
  #7 sig figs
  ../../dacdif -r 1.0e-7 $output_save $output
else
  if ( $?DO_PARALLEL ) then
    #Use slightly less precision for parallel runs.
    #3 sig figs
    #Special case for 4096wat since it has one value with
    #a big relative error - so you get a 1 line failure.
    ../../dacdif -r 1.0e-2 $output_save $output
  else 
    #5 sig figs
    ../../dacdif -r 1.0e-5 $output_save $output
  endif
endif

/bin/rm -f mdin logfile mdinfo dummy mdcrd restrt
exit(0)

error:
echo "  ${0}:  Program error"
exit(1)









