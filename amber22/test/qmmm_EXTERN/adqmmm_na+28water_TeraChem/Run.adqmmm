#!/bin/csh -f
#TEST-PROGRAM parallel sander
#TEST-DESCRIP adaptive QM/MM
#TEST-PURPOSE regression, basic
#TEST-STATE   TO_BE_DEtermined - clean up unused input variables

#NOTE: Each TeraChem job will run simultaneously on all available GPUs.

../../check_TeraChem.x
if( $status > 0) then
  exit(0)
endif

set sander = "${AMBERHOME}/bin/sander.MPI"
if( $?TESTsander ) then
    set sander = $TESTsander
endif

if( ! $?DO_PARALLEL ) then
    echo "This test (adQMMM) can only run in parallel. Exiting."
    exit 0
endif

set numprocs = `$DO_PARALLEL ../../numprocs`

if ( "$numprocs" != 2 && "$numprocs" != 4 ) then
   echo "This adQMMM test requires 2 or 4 processors!"
   echo "You specified "$numprocs""
   exit 0
endif

echo "Parallelism treated within TeraChem"

# for $1='mpi' we use MPI-2 Client/Server data exchange between sander and TeraChem
set mpi = 0
if ( $1 == 'mpi' ) then
  echo "Testing MPI-2 Client/Server interface"
  set mpi = 1
endif

set npartition = "$numprocs"

set system = na-28spcfw
set prmtop = $system.prmtop
set inpcrd = $system.restrt
set job = adqmmm-6-$npartition
set mdin = $job.mdin
set groupfile = $job.groupfile
set mdout = $job.mdout
set mdcrd = $job.mdcrd
set mdinfo = $job.mdinfo
set restrt = $job.restrt

cat > $mdin <<EOF
adQMMM NVT run for Na+ surrounded by 6 QM + 3 adQM SPC(fw) waters
 &cntrl
  irest    = 1,      ! restart trajectory
  ntx      = 5,      ! read coordinates and velocities
  dt       = 0.0005  ! 0.5fs time step
  cut      = 999.9,  ! non-bonded cutoff
  ntb      = 0,      ! no periodic boundary conditions
  ntt      = 3,      ! use Langevin thermostat
  tempi    = 300.0,  ! initial temp = 300K
  temp0    = 300.0,  ! final temp = 300K
  gamma_ln = 5.0,    ! collision frequency 5/ps
  ig       = 7,      ! use fixed random seed such that all groups have the same seed
  ntpr     = 1,      ! print every step
  ntwx     = 1,      ! write coordinates every step
  ntwr     = 2,    ! write restart file at last step
  nstlim   = 2,      ! run for 2 steps
  nscm     = 1000,   ! remove COM motion every 1000 steps
  jfastw   = 4,      ! do not use routines for fast triangulated water
  ioutfm   = 1,      ! NetCDF MDCRD.
  ifqnt    = 1,      ! do QMMM simulation
 /
 &qmmm
  qmmask       = ':1',
  qmcharge     = 1,
  qm_theory    = 'EXTERN',
  adjust_q     = 0,
  vsolv        = 2,
  verbosity    = 0,
 /
 &tc
  method      = 'rhf',
  basis       = 'sto-3g',
  convthre    = 1.0E-06,
  mpi         = $mpi,
  ngpus       = 0,
  debug       = 0,
 /
 &vsolv
  nearest_qm_solvent = 6,
  nearest_qm_solvent_resname = 'WAT',
  nearest_qm_solvent_fq = 1,
  nearest_qm_solvent_center_id = 1,
  qm_center_atom_id = 1,
  verbosity = 0,
  debug = 0,
 /
 &adqmmm
  n_partition     = $npartition, ! n partitionings (n threads needed) = (n-1) molecules in transition region
  debug           = 0,
  verbosity       = 0,
  print_qm_coords = 0,
 /
EOF

rm -f $groupfile
@ x = 1
while ($x <= $npartition)
set ext = 00$x
cat >> $groupfile << EOF
-O -i $mdin -c $inpcrd -o $mdout.$ext -r $restrt.$ext -x $mdcrd.$ext -inf $mdinfo.$ext -p $prmtop
EOF
@ x += 1
end

# Start TeraChem servers for MPI-2 Client/Server data exchange
if ( $mpi ) then
    set basedir = `pwd`
    # we need to run each terachem instance in a subdirectory
    # otherwise scratch files get overwritten (in directory scr)
    @ x = 0
    while ($x < $npartition)
	set ext = 00$x
	mkdir $ext
	cd $ext
	mpirun -np 1 terachem -UseMPI -ID "terachem_port.$ext" > tc_job.$ext.dat &
	cd $basedir
	@ x += 1
    end
endif

# run the job
$DO_PARALLEL $sander -rem 0 -ng $npartition -groupfile $groupfile < /dev/null || goto error

# remove lines that can change from the output
grep -v '  mpi         =' $mdout.001 > tmp
mv tmp $mdout.001

# do the diff
../../dacdif $mdout.001.save $mdout.001

# clean up
/bin/rm -f $groupfile $mdin $mdout.002 $mdout.003 $mdout.004 $restrt.00? $mdcrd.00? $mdinfo.00? QM_coords.00?.xyz
/bin/rm -r -f 000 001 002 003
exit(0)

error:
echo "  ${0}:  Program error"
exit(1)









