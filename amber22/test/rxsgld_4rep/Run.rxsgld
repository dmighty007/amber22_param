#!/bin/sh
#TEST-PROGRAM sander
#TEST-DESCRIP TO_BE_DEtermined
#TEST-PURPOSE regression, basic
#TEST-STATE   undocumented

set echo
#setenv DO_PARALLEL='mpirun -np 4'

. ../program_error.sh
sander="${AMBERHOME}/bin/sander.MPI"


if [ ! -z "$TESTsander" ]; then
   sander=$TESTsander
fi

if [ -z "$DO_PARALLEL" ]; then
   echo "RXSGLD requires a parallel environment!"
   exit 0
fi

numprocs=`$DO_PARALLEL ../numprocs`

if [ "`basename $sander`" = 'sander.MPI' ]; then
   if [ "$numprocs" -ne 4 -a "$numprocs" -ne 8 -a "$numprocs" -ne 12 -a "$numprocs" -ne 16 ]; then
      echo "This test case requires a multiple of 4 MPI threads!"
      echo "Only using "$numprocs""
      exit 0
   fi
else
   if [ "$numprocs" -ne 8 -a "$numprocs" -ne 12 -a "$numprocs" -ne 16 ]; then
      echo "This test case requires 8, 12, or 16 MPI threads!"
      exit 0
   fi
fi

log=rxsgld.log
output=rxsgld.out
/bin/rm -f $log $output.00? groupfile

cat > groupfile << EOF
#
#
-O -rem 1 -remlog $log -i ./rxsgld.in.000 -p ./ala3.top -c ./mdrestrt -o $output.000 -inf rxsgldinfo.000 -r ./rxsgld.r.000  -x ./rxsgld.crd.000
-O -rem 1 -remlog $log -i ./rxsgld.in.001 -p ./ala3.top -c ./mdrestrt -o $output.001 -inf rxsgldinfo.001 -r ./rxsgld.r.001  -x ./rxsgld.crd.001
-O -rem 1 -remlog $log -i ./rxsgld.in.002 -p ./ala3.top -c ./mdrestrt -o $output.002 -inf rxsgldinfo.002 -r ./rxsgld.r.002  -x ./rxsgld.crd.002
-O -rem 1 -remlog $log -i ./rxsgld.in.003 -p ./ala3.top -c ./mdrestrt -o $output.003 -inf rxsgldinfo.003 -r ./rxsgld.r.003  -x ./rxsgld.crd.003
#
EOF

$DO_PARALLEL $sander -O -ng 4 -groupfile groupfile < /dev/null || error

../dacdif $log.save $log
../dacdif rxsgld.crd.000.save rxsgld.crd.000
if [ "`basename $sander`" = "pmemd.mic_offload.MPI" ]; then
   ../dacdif -r 1.e-05 $output.000.save $output.000
else
   ../dacdif $output.000.save $output.000
fi

/bin/rm -f rxsgld.r* mdinfo* mdcrd* rxsgldinfo.* rem.type $output.001 groupfile \
      logfile.00? $output.002 $output.003 rxsgld.crd.001 rxsgld.crd.002 rxsgld.crd.003
exit 0
