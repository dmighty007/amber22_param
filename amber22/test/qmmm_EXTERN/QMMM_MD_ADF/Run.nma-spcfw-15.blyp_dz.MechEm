#!/bin/csh -f
#TEST-PROGRAM sander
#TEST-DESCRIP TO_BE_DEtermined
#TEST-PURPOSE regression, basic
#TEST-STATE   undocumented

../../check_ADF_adf.x
if( $status > 0) then
  exit(0)
endif

set sander = "${AMBERHOME}/bin/sander"
if( $?TESTsander ) then
    set sander = $TESTsander
endif

if( $?DO_PARALLEL ) then
   echo "Running $TESTsander in parallel on "`$DO_PARALLEL echo | wc -l`" cores."
else set DO_PARALLEL = ''
endif

# check on how many CPU core ADF shall be running
if ( $?ADF_NCPUS) then
    if ( $ADF_NCPUS > 1 ) then
        echo "ADF will run on $ADF_NCPUS CPU cores"
    endif
else
    set ADF_NCPUS = 1
    echo "ADF will run on 1 CPU core"
    echo "(environment variable ADF_NCPUS not set)"
endif

cat > mdin <<EOF
NMA in 15 Angstrom water shell QM/MM BLYP/DZ/SPC(Fw) NVE 2 steps at dt=0.5fs
 &cntrl
  imin     = 0,      ! do MD (no minimization)
  irest    = 1,      ! restart trajectory
  ntx      = 5,      ! read coordinates and velocities
  dt       = 0.0005  ! 0.5fs time step
  cut      = 999.9,  ! non-bonded cutoff
  ntb      = 0,      ! periodic boundary conditions
  ntpr     = 1,      ! print every step)
  ntwx     = 1,      ! write coordinates every step
  ntwr     = 2,      ! write restart file at last step
  nstlim   = 2,      ! runfor 2 steps
  nscm     = 0,      ! do not remove COM motion
  jfastw   = 4,      ! do not use routines for fast triangulated water
  ioutfm   = 1,      ! NetCDF MDCRD.
  ntxo     = 1,      ! Formatted restart file
  ifqnt    = 1,      ! do QMMM simulation
 /
 &qmmm
  qmmask    = ':1-2',
  qm_theory = 'EXTERN',
  qmmm_int  = 5,
 /
 &adf
  basis     = 'DZ',
  xc        = 'GGA BLYP',
  beckegrid = 'normal',
  zlmfit    = 'normal',
  num_threads = $ADF_NCPUS,
 /
EOF

set output = nma-spcfw-15.blyp_dz.MechEm.mdout
set restrt = nma-spcfw-15.blyp_dz.MechEm.restrt
rm -f $output

touch dummy
$DO_PARALLEL $sander -O -p nma-spcfw-15.prmtop -c nma-spcfw-15.restrt -o $output -r $restrt < dummy || goto error

# remove info about number of threads from output as this may vary
grep -v 'num_threads' $output > tmp
mv tmp $output

../../dacdif -t 1 $output.save $output
../../dacdif -a 0.0001 $restrt.save $restrt

/bin/rm -f dummy mdin mdinfo mdcrd dummy restrt adf_job.* t21.* adf.t21 logfile old.adf_job.*
/bin/rm -rf 000
exit(0)

error:
echo "  ${0}:  Program error"
exit(1)









