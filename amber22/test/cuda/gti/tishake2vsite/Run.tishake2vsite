#!/bin/csh -f
#TEST-PROGRAM pmemd.cuda
#TEST-DESCRIP softcore TI tishake2 vsite
#TEST-PURPOSE regression, basic
#TEST-STATE   undocumented
 
#$1 = PREC_MODEL
#$2 = NETCDF
echo `pwd`


if ( "$1" == "CPU" ) then
   set sander = "mpiexec -np 20 ${AMBERHOME}/bin/pmemd.MPI"
else
   set sander = ${AMBERHOME}/bin/pmemd.cuda_$1
endif


cat > mdin.0 <<EOF
 AMBER input
&cntrl
imin = 0, nstlim = 25,
dt = 0.004, ntc = 2, ntf = 1,
irest = 1, ntx = 5, iwrap = 0,
ntt = 3, gamma_ln = 2.0, temp0 = 298.15,
ntpr = 1, ntwx = 1,
crgmask = "", timask1 = ":1", timask2 = ":2",
scmask1 = ":1@C1,H1,H2,H3,H5,H7,EP1", scmask2 = ":2@H3,H5,H1,EP1",
tishake = 2, gti_syn_mass = 1,
icfe = 1, ifsc = 1, clambda = 0.5,
gti_add_sc = 1, gti_chg_keep = 1, gti_cut = 1,
gti_lam_sch = 1, gti_ele_sc = 1, gti_vdw_sc = 1,
scalpha = 0.2, scbeta = 50.0,
ifmbar = 1, ifmbar_net = 1,
mbar_states = 5, bar_intervall = 1,
mbar_lambda = 0.0 0.25 0.50 0.75 1.0,
ntr = 0, restraint_wt = 0.0,
ig=5,
/
EOF

set output = out.0

set output_save = $output.$1

touch dummy
$sander -O -i mdin.0 -o out.0 -p solvated_prmtop -c solvated_rst -r restrt.0

#Use different dacdif tolerances based on precision model.
if ( "$1" == "DPFP" ) then
  #7 sig figs
  ../../../dacdif -r 1.0e-7 $output_save $output
else
  #2 sig figs
  ../../../dacdif -r 1.1e-2 $output_save $output
endif

/bin/rm -f mdin.0 mdinfo dummy restrt.0 mdcrd
exit(0)

error:
echo "  ${0}:  Program error"
exit(1)

