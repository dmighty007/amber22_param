#!/bin/csh -f
#TEST-PROGRAM pmemd.cuda
#TEST-DESCRIP TO_BE_DEtermined
#TEST-PURPOSE regression, basic
#TEST-STATE   undocumented

#$1 = PREC_MODEL

set sander = "${AMBERHOME}/bin/pmemd.cuda_$1.MPI"
if( $?TESTsander ) then
   set sander = $TESTsander
endif

if( ! $?DO_PARALLEL ) then
  echo " NEB can only be run in parallel. "
  echo " This test case requires 4 mpi threads to run."
  echo " set env var DO_PARALLEL"
  echo " Not running test, exiting....."
  exit(0)
else
  set numprocs=`echo $DO_PARALLEL | awk -f ../../../numprocs.awk `
  if ( "$numprocs" == 4 ) then
      goto runtest
  else if ( $?MP_PROCS)then
      if ( $MP_PROCS == 4 )then
        goto runtest
      endif
  endif
endif

echo " This test case requires 4 mpi threads."
echo " Not running test, exiting....."
exit(0)

runtest:
cat > mdin <<EOF
Alanine NEB initial MD with small K
&cntrl
   imin = 0, irest = 0,
   ntc=2, ntf=2,
   ntpr=1, ntwx=500,
   ntb = 0, cut = 999.0, rgbmax=999.0,
   igb = 7, saltcon=0.2,
   nstlim = 25, nscm=0,
   dt = 0.0005, ig=42,
   ntt = 3, gamma_ln=1000.0,
   tempi=0.0, temp0=300.0,
   tgtfitmask=":1-12",
   tgtrmsmask=":1-12",
   ineb = 1,skmin = 10,skmax = 10,
   nmropt=1,
 /
 &wt type='TEMP0', istep1=0,istep2=35000,
   value1=0.0, value2=300.0
 /
 &wt type='END'
 /
EOF

$DO_PARALLEL $sander -ng 4 -groupfile groupfile.in || goto error
#Use different dacdif tolerances based on precision model.
if ( "$1" == "DPFP" ) then
../../../dacdif -a 1.e-3 neb_gb_full_01.out_$1.save neb_gb_full_01.out
../../../dacdif -a 1.e-3 neb_gb_full_02.out_$1.save neb_gb_full_02.out
../../../dacdif -a 1.e-3 neb_gb_full_03.out_$1.save neb_gb_full_03.out
../../../dacdif -a 1.e-3 neb_gb_full_04.out_$1.save neb_gb_full_04.out
else
../../../dacdif -a 1.e-1 neb_gb_full_01.out_$1.save neb_gb_full_01.out
../../../dacdif -a 1.e-1 neb_gb_full_02.out_$1.save neb_gb_full_02.out
../../../dacdif -a 1.e-1 neb_gb_full_03.out_$1.save neb_gb_full_03.out
../../../dacdif -a 1.e-1 neb_gb_full_04.out_$1.save neb_gb_full_04.out
endif

/bin/rm -f mdin *.inf *.mdcrd *.rst *.out logfile.00* 
endif

exit(0)

error:
echo "  ${0}:  Program error"
exit(1)
